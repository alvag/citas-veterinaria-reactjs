{"version":3,"sources":["components/AgregarCita.js","components/Header.js","components/Cita.js","components/ListaCitas.js","App.js","serviceWorker.js","index.js"],"names":["AgregarCita","nombreMascota","React","createRef","propietario","fecha","hora","sintomas","state","error","crearNuevaCita","e","preventDefault","_this","current","value","setState","nuevaCita","id","uuid","props","crearCita","currentTarget","reset","focus","hasError","this","react_default","a","createElement","className","onSubmit","htmlFor","ref","type","placeholder","Component","Header","title","Cita","eliminarCita","cita","_this$props$cita","onClick","ListaCitas","citas","message","length","map","index","Cita_Cita","key","App","Object","toConsumableArray","concat","filter","JSON","parse","localStorage","getItem","setItem","stringify","components_Header","AgregarCita_AgregarCita","ListaCitas_ListaCitas","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.292ed54e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport uuid from 'uuid';\nimport PropTypes from 'prop-types';\n\nexport default class AgregarCita extends Component {\n\n    nombreMascota = React.createRef();\n    propietario = React.createRef();\n    fecha = React.createRef();\n    hora = React.createRef();\n    sintomas = React.createRef();\n\n    state = {\n        error: false\n    }\n\n    crearNuevaCita = e => {\n        e.preventDefault();\n\n        if (this.nombreMascota.current.value === '' ||\n            this.propietario.current.value === '' ||\n            this.hora.current.value === '' ||\n            this.fecha.current.value === '' ||\n            this.sintomas.current.value === '') {\n            this.setState({ error: true });\n            return;\n        }\n\n        this.setState({ error: false });\n\n        const nuevaCita = {\n            id: uuid(),\n            nombreMascota: this.nombreMascota.current.value,\n            propietario: this.propietario.current.value,\n            fecha: this.fecha.current.value,\n            hora: this.hora.current.value,\n            sintomas: this.sintomas.current.value\n        };\n\n        this.props.crearCita(nuevaCita);\n\n        e.currentTarget.reset();\n        this.nombreMascota.current.focus();\n    }\n\n    render() {\n        const hasError = this.state.error;\n\n        return (\n            <div className=\"card mt-5\">\n                <div className=\"card-body\">\n                    <h2 className=\"card-title text-center mb-5\">Agrega las Citas Aquí</h2>\n\n                    <form onSubmit={this.crearNuevaCita}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"name\">Nombre Mascota</label>\n                            <input ref={this.nombreMascota} type=\"text\" className=\"form-control\" id=\"name\" placeholder=\"Nombre Mascota\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"owner\">Nombre Dueño</label>\n                            <input ref={this.propietario} type=\"text\" className=\"form-control\" id=\"owner\" placeholder=\"Nombre Dueño de la Mascota\" />\n                        </div>\n\n                        <div className=\"row\">\n                            <div className=\"form-group col-6\">\n                                <label htmlFor=\"date\">Fecha</label>\n                                <input ref={this.fecha} type=\"date\" id=\"date\" className=\"form-control\" />\n                            </div>\n\n                            <div className=\"form-group col-6\">\n                                <label htmlFor=\"time\">Hora</label>\n                                <input ref={this.hora} type=\"time\" className=\"form-control\" id=\"time\" />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"sintoma\">Sintomas</label>\n                            <textarea ref={this.sintomas} className=\"form-control\" id=\"sintoma\" ></textarea>\n                        </div>\n                        <div className=\"d-flex justify-content-end\">\n                            <button type=\"submit\" className=\"btn btn-success\">Agregar</button>\n                        </div>\n                    </form>\n                    {hasError ? <div className=\"alert alert-danger text-center mt-3\">Todos los campos son obligatorios</div> : ''}\n                </div>\n            </div>\n\n        );\n    }\n}\n\nAgregarCita.propTypes = {\n    crearCita: PropTypes.func.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = props => {\n    return (\n        <header>\n            <h1 className=\"text-center\">{props.title}</h1>\n        </header>\n    );\n};\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Cita extends Component {\n\n    eliminarCita = () => {\n        this.props.eliminarCita(this.props.cita.id);\n    }\n\n    render() {\n        const { nombreMascota, propietario, fecha, hora, sintomas } = this.props.cita;\n        return (\n            <div className=\"media mt-3\">\n                <div className=\"media-body\">\n                    <h3 className=\"mt-0\">{nombreMascota}</h3>\n                    <p className=\"card-text\"><span>Nombre del dueño: {propietario}</span></p>\n                    <p className=\"card-text\"><span>Fecha: {fecha}</span></p>\n                    <p className=\"card-text\"><span>Hora: {hora}</span></p>\n                    <p className=\"card-text\"><span>Síntomas:</span></p>\n                    <p className=\"card-text\">{sintomas}</p>\n\n                    <button className=\"btn btn-danger\" onClick={this.eliminarCita}>Eliminar</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nCita.propTypes = {\n    eliminarCita: PropTypes.func.isRequired,\n    cita: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        nombreMascota: PropTypes.string.isRequired,\n        propietario: PropTypes.string.isRequired,\n        fecha: PropTypes.string.isRequired,\n        hora: PropTypes.string.isRequired,\n        sintomas: PropTypes.string.isRequired\n    }).isRequired\n};\n","import React, { Component } from 'react';\nimport Cita from './Cita';\nimport PropTypes from 'prop-types';\n\nexport default class ListaCitas extends Component {\n\n    render() {\n\n        const citas = this.props.citas;\n\n        const message = citas.length === 0 ? 'No hay citas' : 'Administra tus  citas aquí';\n\n        return (\n            <div className=\"card mt-5\">\n                <div className=\"card-body\">\n                    <h2 className=\"card-title text-center\">{message}</h2>\n\n                    <div className=\"lista-citas\">\n                        {citas.map((cita, index) => (\n                            <Cita key={index} cita={cita}\n                                eliminarCita={this.props.eliminarCita} />\n                        ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nListaCitas.propTypes = {\n    citas: PropTypes.array.isRequired,\n    eliminarCita: PropTypes.func.isRequired\n};\n","import React, { Component } from 'react';\nimport './css/App.css';\nimport AgregarCita from './components/AgregarCita';\nimport Header from './components/Header';\nimport ListaCitas from './components/ListaCitas';\n\nclass App extends Component {\n\n    state = {\n        citas: []\n    }\n\n    componentDidMount() {\n        const citas = JSON.parse(localStorage.getItem('citas'));\n        if (citas) {\n            this.setState({ citas });\n        }\n    }\n\n    componentDidUpdate() {\n        localStorage.setItem('citas', JSON.stringify(this.state.citas));\n    }\n\n    crearCita = (nuevaCita) => {\n        const citas = [...this.state.citas, nuevaCita];\n        this.setState({ citas });\n    }\n\n    eliminarCita = id => {\n        const citas = this.state.citas.filter(cita => cita.id !== id);\n        this.setState({ citas });\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <Header title=\"Administrador de Pacientes de Veterinaria\" />\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <AgregarCita crearCita={this.crearCita} />\n                    </div>\n                    <div className=\"col-md-6\">\n                        <ListaCitas\n                            citas={this.state.citas}\n                            eliminarCita={this.eliminarCita} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}